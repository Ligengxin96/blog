<feed xmlns="http://www.w3.org/2005/Atom"> <id></id><title>Ligengxin's Blog</title><subtitle>This is Ligengxin's Blog, help myself record and share my knowledge. This Blog is a minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle> <updated>2021-03-11T17:44:03+08:00</updated> <author> <name>Gengxin Li</name> <uri></uri> </author><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="" rel="alternate" type="text/html" /> <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator> <rights> © 2021 Gengxin Li </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>使用SQL Server中处理JSON数据</title><link href="/posts/handle-json-in-sql/" rel="alternate" type="text/html" title="使用SQL Server中处理JSON数据" /><published>2021-02-27T00:00:00+08:00</published> <updated>2021-02-27T00:00:00+08:00</updated> <id>/posts/handle-json-in-sql/</id> <content src="/posts/handle-json-in-sql/" /> <author> <name>Gengxin Li</name> </author> <category term="Technology" /> <summary>   这次的任务是需要计算Azure中每个API访问的数量以及访问的方式,为了避免数据库数据冗余,所以就将source这个字段在kusto的查询中处理成了一个JSON.然后在存入到了数据库中.具体需求如下图 1.具体代码 我们首先纵向展开上图的原始数据,可以得到下图的数据 SELECT t1.apiPath, t1.operation, t1.[source], t1.[sourceCount] FROM ( SELECT apiPath, operation, impact.[key] as source, SUM(CAST(ISNULL(impact.[value], 0) AS BIGINT)) AS sourceCount FROM @tempTable1 CROSS APPLY OPENJSON(impact) as impact GROUP BY ap... </summary> </entry> <entry><title>React机制分析总结</title><link href="/posts/how-does-react-work/" rel="alternate" type="text/html" title="React机制分析总结" /><published>2021-02-19T00:00:00+08:00</published> <updated>2021-02-19T00:00:00+08:00</updated> <id>/posts/how-does-react-work/</id> <content src="/posts/how-does-react-work/" /> <author> <name>Gengxin Li</name> </author> <category term="Learning" /> <summary> 1.Virtual DOM   简单说下我对于 Virtual DOM的理解.顾名思义就是虚拟DOM,其实就是在内存中表示的DOM树.那如何在内存中表示DOM树呢,很简单使用一个JSON对象,通过不断在children属性中加入一个个类似的JSON对象,这样就能在内存构建出一棵虚拟的DOM树. { tagName: 'div', // 标签名 properties: { // 属性 style: {} // 样式 }, children: [], // 子节点 key: 1 // 唯一标识 }   再说下我对于JSX的理解,JSX其实只是语法糖,语法糖只是方便我们去写代码,和维护可阅读性.JSX就可以让我们JS代码和React组件嵌套在一起使用.比如下面这个简单的JSX例子,而这背后的逻辑是React的createElement方法在帮我们干活. //... </summary> </entry> <entry><title>forEach中使用async/await</title><link href="/posts/forEach-async/" rel="alternate" type="text/html" title="forEach中使用async/await" /><published>2021-02-02T00:00:00+08:00</published> <updated>2021-02-02T00:00:00+08:00</updated> <id>/posts/forEach-async/</id> <content src="/posts/forEach-async/" /> <author> <name>Gengxin Li</name> </author> <category term="Technology" /> <summary> 1.问题出现   今天在写Azure Function的时候发现了一个问题,就是为了方便定位问题,于是给下面这段代码添加了log信息 // 大致是需要请求一个接口获取数据然后在把结果发送给另外一个接口 let count = 0; const result = await fetchDataFromDataBase(); result.forEach(async (item) =&amp;gt; { await request(item); count++; }); console.log('发送次数', count);   预期结果就是想看看有没有正确的发送请求的数量.当我调试的时候发现结果很奇怪,理论上来说,result.length和count应该是相等的,但是这段代码表现出来的确是count永远输出的都是0.这就让我很好奇了,这到底是为什么. 2.解决办法   查阅... </summary> </entry> <entry><title>使用Ant design Form组件获取Upload组件的fileList信息</title><link href="/posts/antd-form-get-upload-fileLsit-info/" rel="alternate" type="text/html" title="使用Ant design Form组件获取Upload组件的fileList信息" /><published>2021-01-19T00:00:00+08:00</published> <updated>2021-01-19T00:00:00+08:00</updated> <id>/posts/antd-form-get-upload-fileLsit-info/</id> <content src="/posts/antd-form-get-upload-fileLsit-info/" /> <author> <name>Gengxin Li</name> </author> <category term="Technology" /> <summary>   简述下我的业务场景,一个Modal组件中使用了Form组件,而这个Form组件又包含了一些别的组件,然后在点击Modal的确认按钮把Form表单的数据全部发送给Api. 不看过程直接看代码的 1.问题出现   在完成一切后,我发现点击确认按钮后并不能获取到Form组件下面Upload组件的信息,当时就想应该这个组件Api是支持的,然后看了一遍Form组件和Upload组件的发现了一个官方Demo然后肯定就直接Copy代码下来开整啊.但是发现不生效 2.解决过程   咦?官方Demo都不生效,怎么回事呢.仔细研究了下代码 const normFile = (e) =&amp;gt; { console.log('Upload event:', e); if (Array.isArray(e)) { return e; } return e &amp;amp;... </summary> </entry> <entry><title>前端使用Ant design Upload组件上传文件到阿里云OSS的坑</title><link href="/posts/work-problem-Ali-OSS/" rel="alternate" type="text/html" title="前端使用Ant design Upload组件上传文件到阿里云OSS的坑" /><published>2021-01-07T00:00:00+08:00</published> <updated>2021-01-07T00:00:00+08:00</updated> <id>/posts/work-problem-Ali-OSS/</id> <content src="/posts/work-problem-Ali-OSS/" /> <author> <name>Gengxin Li</name> </author> <category term="Issue" /> <summary>   业务需求需要上传文件,那就想办法整呗,一顿操作过后选择了阿里云OSS. 1.问题出现   跟着阿里云文档一步步操作过来的,但是还是出现了一个403错误 &amp;lt;Error&amp;gt; &amp;lt;Code&amp;gt;SignatureDoesNotMatch&amp;lt;/Code&amp;gt; &amp;lt;Message&amp;gt;The request signature we calculated does not match the signature you provided. Check your key and signing method.&amp;lt;/Message&amp;gt; &amp;lt;/Error&amp;gt;   当时就想,这个问题很明显嘛,签名生成错误呗,应该是哪里写错了吧,回去对比下文档和代码吧.en?怎么回事,明明是完全按照文档的来啊,文档的附录写着签名方法是Signature =... </summary> </entry> </feed>
